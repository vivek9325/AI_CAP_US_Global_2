import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn import metrics
 
car_dataset = pd.read_csv('/content/car data.csv')
 
car_dataset.head()
 
car_dataset.shape
 
car_dataset.isnull().sum()
 
print(car_dataset.Fuel_Type.value_counts())
print(car_dataset.Seller_Type.value_counts())
print(car_dataset.Transmission.value_counts())
 
car_dataset.replace({'Fuel_Type':{'Petrol':0, 'Diesel':1, 'CNG':2}},inplace=True)
car_dataset.replace({'Seller_Type':{'Dealer':0,'Individual':1}},inplace=True)
car_dataset.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)
car_dataset.head() 
car_dataset.head()

X = car_dataset.drop(['Car_Name','Selling_Price'],axis=1)
Y = car_dataset['Selling_Price']
print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.1,random_state=2)
 
lin_reg_model = LinearRegression()
 
lin_reg_model.fit(X_train,Y_train) 
lin_reg_model.fit(X_train,Y_train)

training_data_prediction = lin_reg_model.predict(X_train)

error_score = metrics.r2_score(Y_train, training_data_prediction)
print(error_score)

plt.scatter(Y_train, training_data_prediction)
plt.xlabel("Actual price")
plt.ylabel("Predicted price")
plt.title("Actual prices vs Predicted Price")
plt.show()

test_data_prediction = lin_reg_model.predict(X_test)
error_score = metrics.r2_score(Y_test,test_data_prediction)
print(error_score)

plt.scatter(Y_test, test_data_prediction)
plt.xlabel("Actual price")
plt.ylabel("Predicted price")
plt.title("Actual prices vs Predicted Price")
plt.show()
